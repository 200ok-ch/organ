# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:
  deploy:
    docker:
      - image: circleci/node:12.13-stretch
    steps:
      - checkout
      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run:
          name: Install lftp
          command: sudo apt install lftp
      - run:
          name: Deploy to https://org.200ok.ch
          command: ./bin/compile_and_upload.sh

  build:
    docker:
      - image: circleci/node:12.13-stretch
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/mongo:3.4.4

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: yarn install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      - run: yarn test

  push-image:
    machine: true
    steps:
      - checkout
      - run: docker build --rm=false -t ${DOCKER_HUB_USR}/organice:${CIRCLE_SHA1} .
      - run: docker login --username ${DOCKER_HUB_USR} --password ${DOCKER_HUB_PWD}
      - run: docker push ${DOCKER_HUB_USR}/organice:${CIRCLE_SHA1}

workflows:
  version: 2
  build-deploy:
    jobs:
      # - build
      - push-image
          # requires:
          #   - build
          # filters:
          #   branches:
          #     only: master
      # - deploy:
      #     requires:
      #       - build
      #     filters:
      #       branches:
      #         only: master
