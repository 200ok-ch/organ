** How to contribute to organice

First off, thank you for considering contributing to organice. It's
people like you that make organice such a great tool!

**** *Did you find a bug?*

- *Ensure the bug was not already reported* by searching on GitHub
  under [[https://github.com/200ok-ch/organice/issues][Issues]].

- If you're unable to find an open issue addressing the problem, [[https://github.com/200ok-ch/organice/issues/new][open
  a new one]]. Be sure to include a *title and clear description*, as
  much relevant information as possible, and a *code sample* or an
  *executable test case* demonstrating the expected behavior that is
  not occurring.

*** *Development collaboration*

We have good quality assurance and an established workflow. This is it:

1. Open a new GitHub pull request
2. In the form of a User Story (As =<persona>=, [When I =<state>= ], I
   want =<something>=, so that =<measurable achievement>=
3. Ensure the PR description clearly describes the problem and
   solution. Include the relevant issue number if applicable.
4. New Branch in Git
5. Naming: =(feature|fix|chore)/issue-id/short-description=
6. Develop / Test locally until tests pass
   - Please install [[https://prettier.io/][Prettier]] and use it to format your code. This
     repository includes a ~.prettierrc.json~ with some configuration
     options that Prettier will use automatically.
   - If you're using Emacs, you can autoformat your source files:
     https://github.com/munen/emacs.d/#auto-formatting
7. Create Pull Request on Github to =master=
   - Check that the tests also pass on CI
8. Core Team: Merge to =master=, deploy and accept the Issue on
   Github

**** Definition of Done

An issue is done when:

- Functionality has been implemented
- Functionality has been verified
- Surrounding main functionality has been regression tested
- Code has been reviewed
  - Proper code style
  - Code has tests (acceptance tests for user visible changes,
    otherwise at least unit tests)
  - Follows clean code guidelines and architecture best practices
  - Code has been documented
- Code has been merged
- Tested on supported browsers

*Clean code guidelines*

- Create small and highly cohesive modules
  - Avoid long modules and classes
  - Extract modules to separate responsibilities
- Create small methods or functions
  - Avoid long methods or functions
  - Extract methods or functions to separate responsibilities
  - Do one thing

Thanks! :heart: :heart: :heart:

organice Team

[[https://200ok.ch][200ok llc]] and all [[https://github.com/200ok-ch/organice/graphs/contributors][contributors]]
